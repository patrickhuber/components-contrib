// Code generated by protoc-gen-go. DO NOT EDIT.
// source: state.proto

/*
Package plugin is a generated protocol buffer package.

It is generated from these files:
	state.proto

It has these top-level messages:
	Metadata
	GetRequest
	GetStateOption
	GetResponse
	SetRequest
	SetStateOption
	Empty
	DeleteRequest
	DeleteStateOption
*/
package plugin

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Metadata struct {
	Properties map[string]string `protobuf:"bytes,1,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Metadata) Reset()                    { *m = Metadata{} }
func (m *Metadata) String() string            { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()               {}
func (*Metadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Metadata) GetProperties() map[string]string {
	if m != nil {
		return m.Properties
	}
	return nil
}

type GetRequest struct {
	Key      string            `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Metadata map[string]string `protobuf:"bytes,2,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Options  *GetStateOption   `protobuf:"bytes,3,opt,name=options" json:"options,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *GetRequest) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *GetRequest) GetOptions() *GetStateOption {
	if m != nil {
		return m.Options
	}
	return nil
}

type GetStateOption struct {
	Consistency string `protobuf:"bytes,1,opt,name=consistency" json:"consistency,omitempty"`
}

func (m *GetStateOption) Reset()                    { *m = GetStateOption{} }
func (m *GetStateOption) String() string            { return proto.CompactTextString(m) }
func (*GetStateOption) ProtoMessage()               {}
func (*GetStateOption) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetStateOption) GetConsistency() string {
	if m != nil {
		return m.Consistency
	}
	return ""
}

type GetResponse struct {
	Data     []byte            `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Etag     string            `protobuf:"bytes,2,opt,name=etag" json:"etag,omitempty"`
	Metadata map[string]string `protobuf:"bytes,3,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetResponse) GetEtag() string {
	if m != nil {
		return m.Etag
	}
	return ""
}

func (m *GetResponse) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type SetRequest struct {
	Key      string            `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value    []byte            `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Etag     string            `protobuf:"bytes,3,opt,name=etag" json:"etag,omitempty"`
	Metadata map[string]string `protobuf:"bytes,4,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Options  *SetStateOption   `protobuf:"bytes,5,opt,name=options" json:"options,omitempty"`
}

func (m *SetRequest) Reset()                    { *m = SetRequest{} }
func (m *SetRequest) String() string            { return proto.CompactTextString(m) }
func (*SetRequest) ProtoMessage()               {}
func (*SetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SetRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *SetRequest) GetEtag() string {
	if m != nil {
		return m.Etag
	}
	return ""
}

func (m *SetRequest) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *SetRequest) GetOptions() *SetStateOption {
	if m != nil {
		return m.Options
	}
	return nil
}

type SetStateOption struct {
	Concurrency string `protobuf:"bytes,1,opt,name=concurrency" json:"concurrency,omitempty"`
	Consistency string `protobuf:"bytes,2,opt,name=consistency" json:"consistency,omitempty"`
}

func (m *SetStateOption) Reset()                    { *m = SetStateOption{} }
func (m *SetStateOption) String() string            { return proto.CompactTextString(m) }
func (*SetStateOption) ProtoMessage()               {}
func (*SetStateOption) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SetStateOption) GetConcurrency() string {
	if m != nil {
		return m.Concurrency
	}
	return ""
}

func (m *SetStateOption) GetConsistency() string {
	if m != nil {
		return m.Consistency
	}
	return ""
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type DeleteRequest struct {
	Key      string             `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Etag     string             `protobuf:"bytes,2,opt,name=etag" json:"etag,omitempty"`
	Metadata map[string]string  `protobuf:"bytes,3,rep,name=metadata" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Options  *DeleteStateOption `protobuf:"bytes,4,opt,name=options" json:"options,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeleteRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DeleteRequest) GetEtag() string {
	if m != nil {
		return m.Etag
	}
	return ""
}

func (m *DeleteRequest) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *DeleteRequest) GetOptions() *DeleteStateOption {
	if m != nil {
		return m.Options
	}
	return nil
}

type DeleteStateOption struct {
	Concurrency string `protobuf:"bytes,1,opt,name=concurrency" json:"concurrency,omitempty"`
	Consistency string `protobuf:"bytes,2,opt,name=consistency" json:"consistency,omitempty"`
}

func (m *DeleteStateOption) Reset()                    { *m = DeleteStateOption{} }
func (m *DeleteStateOption) String() string            { return proto.CompactTextString(m) }
func (*DeleteStateOption) ProtoMessage()               {}
func (*DeleteStateOption) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DeleteStateOption) GetConcurrency() string {
	if m != nil {
		return m.Concurrency
	}
	return ""
}

func (m *DeleteStateOption) GetConsistency() string {
	if m != nil {
		return m.Consistency
	}
	return ""
}

func init() {
	proto.RegisterType((*Metadata)(nil), "proto.Metadata")
	proto.RegisterType((*GetRequest)(nil), "proto.GetRequest")
	proto.RegisterType((*GetStateOption)(nil), "proto.GetStateOption")
	proto.RegisterType((*GetResponse)(nil), "proto.GetResponse")
	proto.RegisterType((*SetRequest)(nil), "proto.SetRequest")
	proto.RegisterType((*SetStateOption)(nil), "proto.SetStateOption")
	proto.RegisterType((*Empty)(nil), "proto.Empty")
	proto.RegisterType((*DeleteRequest)(nil), "proto.DeleteRequest")
	proto.RegisterType((*DeleteStateOption)(nil), "proto.DeleteStateOption")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for State service

type StateClient interface {
	Init(ctx context.Context, in *Metadata, opts ...grpc.CallOption) (*Empty, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*Empty, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*Empty, error)
	Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
}

type stateClient struct {
	cc *grpc.ClientConn
}

func NewStateClient(cc *grpc.ClientConn) StateClient {
	return &stateClient{cc}
}

func (c *stateClient) Init(ctx context.Context, in *Metadata, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/proto.State/Init", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stateClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := grpc.Invoke(ctx, "/proto.State/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stateClient) Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/proto.State/Set", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stateClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/proto.State/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stateClient) Ping(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/proto.State/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for State service

type StateServer interface {
	Init(context.Context, *Metadata) (*Empty, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Set(context.Context, *SetRequest) (*Empty, error)
	Delete(context.Context, *DeleteRequest) (*Empty, error)
	Ping(context.Context, *Empty) (*Empty, error)
}

func RegisterStateServer(s *grpc.Server, srv StateServer) {
	s.RegisterService(&_State_serviceDesc, srv)
}

func _State_Init_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Metadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateServer).Init(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.State/Init",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateServer).Init(ctx, req.(*Metadata))
	}
	return interceptor(ctx, in, info, handler)
}

func _State_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.State/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _State_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.State/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateServer).Set(ctx, req.(*SetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _State_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.State/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _State_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.State/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateServer).Ping(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _State_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.State",
	HandlerType: (*StateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Init",
			Handler:    _State_Init_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _State_Get_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _State_Set_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _State_Delete_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _State_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "state.proto",
}

func init() { proto.RegisterFile("state.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 509 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xdd, 0x8a, 0xd3, 0x40,
	0x14, 0x66, 0x9a, 0x64, 0x77, 0x3d, 0xe9, 0xee, 0xba, 0xc3, 0x0a, 0xa1, 0x37, 0x86, 0x80, 0xd2,
	0x0b, 0x6d, 0x20, 0x82, 0x2c, 0xd6, 0x1f, 0x10, 0x97, 0xc5, 0x0b, 0x71, 0x49, 0x04, 0xc1, 0xbb,
	0x34, 0x3b, 0xd4, 0x60, 0x3b, 0x33, 0x66, 0x4e, 0x84, 0xbe, 0x82, 0x4f, 0xe3, 0x6b, 0xf8, 0x02,
	0x3e, 0x82, 0x2f, 0xe0, 0x0b, 0x48, 0x27, 0x69, 0x9b, 0x49, 0x5a, 0x61, 0x71, 0xf7, 0x6a, 0xa6,
	0x67, 0xbe, 0xef, 0xeb, 0x39, 0xdf, 0x37, 0x19, 0x70, 0x15, 0xa6, 0xc8, 0x46, 0xb2, 0x10, 0x28,
	0xa8, 0xa3, 0x97, 0xe0, 0x3b, 0x81, 0x83, 0x77, 0x0c, 0xd3, 0xab, 0x14, 0x53, 0xfa, 0x0a, 0x40,
	0x16, 0x42, 0xb2, 0x02, 0x73, 0xa6, 0x3c, 0xe2, 0x5b, 0x43, 0x37, 0xba, 0x5f, 0xe1, 0x47, 0x2b,
	0xd0, 0xe8, 0x72, 0x8d, 0x38, 0xe7, 0x58, 0x2c, 0xe2, 0x06, 0x65, 0xf0, 0x02, 0x8e, 0x5b, 0xc7,
	0xf4, 0x2e, 0x58, 0x5f, 0xd8, 0xc2, 0x23, 0x3e, 0x19, 0xde, 0x89, 0x97, 0x5b, 0x7a, 0x0a, 0xce,
	0xb7, 0x74, 0x56, 0x32, 0xaf, 0xa7, 0x6b, 0xd5, 0x8f, 0x67, 0xbd, 0x33, 0x12, 0xfc, 0x24, 0x00,
	0x17, 0x0c, 0x63, 0xf6, 0xb5, 0x64, 0x0a, 0xb7, 0x50, 0xc7, 0x70, 0x30, 0xaf, 0xfb, 0xf0, 0x7a,
	0x46, 0x7b, 0x1b, 0xda, 0xba, 0xd3, 0xaa, 0xbd, 0x35, 0x81, 0x86, 0xb0, 0x2f, 0x24, 0xe6, 0x82,
	0x2b, 0xcf, 0xf2, 0xc9, 0xd0, 0x8d, 0xee, 0x6d, 0xb8, 0xc9, 0xd2, 0x99, 0xf7, 0xfa, 0x34, 0x5e,
	0xa1, 0x06, 0x63, 0x38, 0x34, 0xb4, 0xae, 0x35, 0x4b, 0x04, 0x47, 0xa6, 0x2e, 0xf5, 0xc1, 0xcd,
	0x04, 0x57, 0xb9, 0x42, 0xc6, 0xb3, 0x95, 0x4a, 0xb3, 0x14, 0xfc, 0x20, 0xe0, 0xea, 0x41, 0x94,
	0x14, 0x5c, 0x31, 0x4a, 0xc1, 0xd6, 0xa3, 0x2e, 0xa1, 0xfd, 0x58, 0xef, 0x97, 0x35, 0x86, 0xe9,
	0xb4, 0xfe, 0x43, 0xbd, 0xa7, 0xcf, 0x1b, 0xb6, 0x58, 0xda, 0x16, 0xbf, 0x69, 0x4b, 0xa5, 0xb6,
	0xcb, 0x97, 0xff, 0x1b, 0xf3, 0x0f, 0x01, 0x48, 0xfe, 0x15, 0x99, 0x41, 0xed, 0xd7, 0xd4, 0xf5,
	0x14, 0x56, 0x63, 0x8a, 0x66, 0xb8, 0xb6, 0x11, 0x6e, 0x72, 0xad, 0x70, 0x1d, 0x23, 0xdc, 0xe4,
	0x36, 0xc2, 0xfd, 0x00, 0x47, 0xc9, 0xb6, 0x70, 0xb3, 0xb2, 0x28, 0x5a, 0xe1, 0xae, 0x4a, 0xed,
	0xf8, 0x7b, 0xdd, 0xf8, 0xf7, 0xc1, 0x39, 0x9f, 0x4b, 0x5c, 0x04, 0xbf, 0x09, 0x1c, 0xbe, 0x61,
	0x33, 0x86, 0x6c, 0xb7, 0xaf, 0xdb, 0xee, 0xc1, 0xcb, 0xce, 0x3d, 0x08, 0x6a, 0x17, 0x0c, 0xb5,
	0x9d, 0x26, 0x46, 0x1b, 0x13, 0x6d, 0x6d, 0xa2, 0x67, 0xd0, 0x6f, 0xde, 0xc7, 0x8f, 0x70, 0xd2,
	0x91, 0xbe, 0x09, 0x2b, 0xa3, 0x5f, 0x04, 0x1c, 0xad, 0x49, 0x1f, 0x80, 0xfd, 0x96, 0xe7, 0x48,
	0x8f, 0x5b, 0xef, 0xd8, 0xa0, 0x5f, 0x17, 0xb4, 0xe5, 0xf4, 0x11, 0x58, 0x17, 0x0c, 0xe9, 0x49,
	0xe7, 0x39, 0x19, 0xd0, 0xee, 0xa7, 0x44, 0x1f, 0x82, 0x95, 0x34, 0xd0, 0x9b, 0xfb, 0xd9, 0x51,
	0xdd, 0xab, 0xe6, 0xa3, 0xa7, 0xdb, 0x82, 0x68, 0xa1, 0x03, 0xb0, 0x2f, 0x73, 0x3e, 0xa5, 0x46,
	0xd5, 0xc4, 0xbc, 0x3e, 0xfb, 0xf4, 0x74, 0x9a, 0xe3, 0xe7, 0x72, 0x32, 0xca, 0xc4, 0x3c, 0xbc,
	0x4a, 0x65, 0x11, 0x66, 0x62, 0x2e, 0x05, 0x67, 0x1c, 0xd5, 0xe3, 0x4c, 0x70, 0x2c, 0xf2, 0x49,
	0xa8, 0x1f, 0xfa, 0x50, 0xce, 0xca, 0x69, 0xce, 0xc7, 0xd5, 0x32, 0xd9, 0xd3, 0x32, 0x4f, 0xfe,
	0x06, 0x00, 0x00, 0xff, 0xff, 0x2c, 0x5f, 0x4e, 0xd4, 0x06, 0x06, 0x00, 0x00,
}
